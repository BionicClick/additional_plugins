

Version 1.1.5:
==============
Changes by Lukas Reindl (ljr_nbg [at] web [dot] de)

- Added this ChangeLog file
- Updated PHP Markdown 1.0.1c to 1.0.1o
- Updated PHP Markdown Extra 1.0.1 to 1.2.5
- Patched PHP Markdown and PHP Markdown Extra:
  changed curly brackets for accessing array members to square brackets (see below for details)
  
- - - - - - - - - - - - - - - - - - - - - - 

Changes were done in the following lines (original lines included here):
(Included for documentation. Should be removed in future updates.)

PHP Markdown 1.0.1o
-------------------

- Line 910: $level = $matches[2]{0} == '=' ? 1 : 2;
- Line 1206: $token_stack[0] = str_repeat($token{0}, 3-$token_len);
- Line 1231: $em = $token{0};
- Line 1560: switch ($token{0}) {
- Line 1562: return $this->hashPart("&#". ord($token{1}). ";");

PHP Markdown Extra 1.2.5
------------------------

- Line 934: $level = $matches[2]{0} == '=' ? 1 : 2;
- Line 1230: $token_stack[0] = str_repeat($token{0}, 3-$token_len);
- Line 1255: $em = $token{0};
- Line 1584: switch ($token{0}) {
- Line 1586: return $this->hashPart("&#". ord($token{1}). ";");
- Line 1934: if ($tag{0} == "`") {
- Line 1970: else if ($tag{0} == "\n" || $tag{0} == " ") {
- Line 1998: $tag{1} == '!' || $tag{1} == '?')
- Line 2017: if ($tag{1} == '/')			$depth--;
- Line 2018: else if ($tag{strlen($tag)-2} != '/'  $depth++;
- Line 2122: return array($original_text{0}, substr($original_text, 1));
- Line 2134: $tag{1} == '!' || $tag{1} == '?')
- Line 2145: if ($tag{1} == '/')	  $depth--;
- Line 2146: else if ($tag{strlen($tag)-2} != '/')      $depth++;
- Line 2270: $level = $matches[3]{0} == '=' ? 1 : 2;

